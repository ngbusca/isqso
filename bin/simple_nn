#!/usr/bin/env python

from os.path import dirname
import argparse

import numpy as np
import pydot
from IPython.display import SVG
import scipy.misc
from isqso import models
from isqso.io import read_data
from keras.utils import plot_model
from keras.utils.vis_utils import model_to_dot
from keras.models import load_model


parser = argparse.ArgumentParser()

parser.add_argument("--model", type = str, required=True)
parser.add_argument("--epochs", type = int, required=False, default = 5)
args = parser.parse_args()

X_train, Y_train, X_valid, Y_valid,_,_  = read_data()
print X_train.shape, Y_train.shape

try:
    model = getattr(models, args.model)(X_train[0,:,None].shape, classes = Y_train.shape[1])
    model.compile(optimizer='adam', loss = 'categorical_crossentropy', metrics=['accuracy'])
except:
    model = load_model(args.model)
history = model.fit(X_train[:,:,None], Y_train, epochs = args.epochs, batch_size = 256)

preds = model.evaluate(X_train[:,:,None], Y_train)
print ("Loss = " + str(preds[0]))
print ("Test Accuracy = " + str(preds[1]))

model.save('simple_model.h5')

model.summary()

plot_model(model, to_file='model.png')
SVG(model_to_dot(model).create(prog='dot', format='svg'))

